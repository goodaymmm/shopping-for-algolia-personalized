{
  "name": "shopping-for-algolia-personalized",
  "version": "1.0.0",
  "description": "AI-powered personalized shopping assistant with Gemini API image analysis and Algolia MCP integration",
  "main": "dist/main/main.js",
  "homepage": ".",
  "scripts": {
    "dev": "vite",
    "clean": "rimraf dist release",
    "build": "npm run clean && npm run build:all && electron-builder",
    "build:win": "npm run clean && npm run build:all && electron-builder --win",
    "build:all": "npm run build:main && npm run build:renderer && node scripts/copy-data.js && node scripts/copy-mcp.js",
    "build:main": "tsc -p tsconfig.main.json",
    "build:renderer": "vite build && node scripts/postbuild.js",
    "build:dev": "npm run clean && npm run build:all",
    "electron:dev": "electron dist/main/main.js",
    "preview": "vite preview",
    "lint": "eslint src --ext .ts,.tsx",
    "type-check": "tsc --noEmit",
    "preprocess-amazon-data": "tsc scripts/preprocess-amazon-data.ts --outDir dist/scripts --target es2020 --module commonjs && node dist/scripts/preprocess-amazon-data.js",
    "mcp:build": "npx tsc src/main/mcp-standalone.js src/main/database.ts src/main/personalization.ts src/main/mcp-server.ts --outDir dist/main --target es2020 --module commonjs --esModuleInterop --resolveJsonModule --skipLibCheck --allowJs",
    "mcp:start": "node dist/main/mcp-standalone.js",
    "build:extension": "node scripts/build-extension.js"
  },
  "keywords": [
    "electron",
    "react",
    "typescript",
    "ai",
    "shopping",
    "algolia",
    "gemini",
    "mcp"
  ],
  "author": "Shopping for Algolia personalized",
  "license": "MIT",
  "dependencies": {
    "@google/generative-ai": "^0.24.1",
    "@modelcontextprotocol/sdk": "^1.15.1",
    "ajv": "^8.12.0",
    "algoliasearch": "^5.32.0",
    "better-sqlite3": "^12.2.0",
    "clsx": "^2.1.1",
    "hyparquet": "^1.17.1",
    "keytar": "^7.9.0",
    "lucide-react": "^0.525.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "typescript": "^5.5.3",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/better-sqlite3": "^7.6.13",
    "@types/node": "^24.0.13",
    "@types/react": "^18.3.5",
    "@types/react-dom": "^18.3.0",
    "@typescript-eslint/eslint-plugin": "^8.36.0",
    "@typescript-eslint/parser": "^8.36.0",
    "@vitejs/plugin-react": "^4.6.0",
    "archiver": "^7.0.1",
    "autoprefixer": "^10.4.21",
    "electron": "^37.2.1",
    "electron-builder": "^25.1.8",
    "eslint": "^9.31.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "glob": "^11.0.3",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "rimraf": "^6.0.1",
    "tailwindcss": "^3.4.1",
    "typescript-eslint": "^8.3.0",
    "vite": "^5.4.2"
  },
  "build": {
    "appId": "com.example.shopping-for-algolia-personalized",
    "productName": "Shopping for Algolia personalized",
    "npmRebuild": true,
    "directories": {
      "output": "release",
      "buildResources": "build"
    },
    "files": [
      "dist/**/*",
      "src/data/**/*",
      "resources/algolia-mcp/**/*",
      "mcp-server.bat",
      "mcp-server.sh",
      "!dist/**/*.map",
      "!dist/**/*.ts",
      "node_modules/**/*",
      "!node_modules/*/{CHANGELOG.md,README.md,README,readme.md,readme}",
      "!node_modules/*/{test,__tests__,tests,powered-test,example,examples}",
      "!node_modules/**/*.d.ts"
    ],
    "asar": true,
    "asarUnpack": [
      "node_modules/better-sqlite3/**/*",
      "node_modules/keytar/**/*",
      "node_modules/@modelcontextprotocol/**/*",
      "node_modules/zod/**/*",
      "src/data/**/*",
      "mcp-server.bat",
      "mcp-server.sh",
      "dist/main/mcp-minimal.js",
      "dist/main/database.js",
      "dist/main/personalization.js",
      "resources/algolia-mcp/**/*"
    ],
    "extraResources": [
      "resources/algolia-mcp/**/*"
    ],
    "extraMetadata": {
      "main": "dist/main/main.js"
    },
    "win": {
      "target": "nsis"
    },
    "nsis": {
      "oneClick": false,
      "allowToChangeInstallationDirectory": true,
      "warningsAsErrors": false,
      "perMachine": true
    },
    "mac": {
      "target": "dmg"
    },
    "linux": {
      "target": "AppImage"
    }
  }
}
